"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/user/home/page",{

/***/ "(app-pages-browser)/./src/app/user/home/components/hooks/useCurrentCourse.tsx":
/*!*****************************************************************!*\
  !*** ./src/app/user/home/components/hooks/useCurrentCourse.tsx ***!
  \*****************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isReleaseTimeValid: function() { return /* binding */ isReleaseTimeValid; },\n/* harmony export */   useCurrentCourse: function() { return /* binding */ useCurrentCourse; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_api_courses__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/api/courses */ \"(app-pages-browser)/./src/lib/api/courses.ts\");\n/* harmony import */ var _lib_utils_formatTime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils/formatTime */ \"(app-pages-browser)/./src/lib/utils/formatTime.ts\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n// src/app/user/home/components/hooks/useCurrentCourse.tsx\nvar _s = $RefreshSig$();\n\n\n\n\n\nconst isReleaseTimeValid = (releaseTime, courseStartDate)=>{\n    if (!courseStartDate) return true;\n    const startDate = new Date(courseStartDate);\n    const releaseDate = new Date(startDate.getTime() + releaseTime * 24 * 60 * 60 * 1000);\n    return new Date() >= releaseDate;\n};\nconst MILLISECONDS_PER_HOUR = 60 * 60 * 1000;\nconst formatReleaseTime = (date)=>{\n    const releaseDate = new Date(date);\n    const now = new Date();\n    const diffHours = Math.ceil((releaseDate.getTime() - now.getTime()) / (1000 * 60 * 60));\n    return \"解放まであと\".concat(diffHours, \"時間\");\n};\nconst formatTimeRemaining = (timeOutAt)=>{\n    const endTime = new Date(timeOutAt);\n    const now = new Date();\n    const remainingMs = endTime.getTime() - now.getTime();\n    if (remainingMs <= 0) return \"完了\";\n    return \"残り\".concat((0,_lib_utils_formatTime__WEBPACK_IMPORTED_MODULE_2__.formatTime)(Math.floor(remainingMs / 1000)));\n};\n// useCurrentCourse.tsx に追加する基本的な状態判定関数\nconst getChapterDisplayState = (chapter, courseStatus, previousChapter)=>{\n    console.log(\"【チャプター表示状態の判定】\", {\n        チャプターID: chapter.id,\n        チャプタータイトル: chapter.title,\n        解放時間設定: chapter.nextUnlockTime,\n        現在時刻: new Date().toISOString(),\n        解放時間到達判定: chapter.nextUnlockTime ? new Date() < new Date(chapter.nextUnlockTime) : \"設定なし\",\n        チャプターステータス: chapter.status,\n        コースステータス: courseStatus,\n        前のチャプター状態: previousChapter ? {\n            ID: previousChapter.id,\n            ステータス: previousChapter.status\n        } : \"前のチャプターなし\"\n    });\n    // 1. コース完了系の状態判定\n    if ([\n        \"COMPLETED\",\n        \"FAILED\",\n        \"PERFECT\"\n    ].includes(courseStatus)) {\n        return {\n            canShowPreview: true,\n            message: \"完了\",\n            showTimer: false\n        };\n    }\n    // 2. 前のチャプターによるアクセス判定\n    if (previousChapter && previousChapter.status !== \"COMPLETED\") {\n        return {\n            canShowPreview: false,\n            message: null,\n            showTimer: false\n        };\n    }\n    // 3. 時間待ち判定\n    if (chapter.nextUnlockTime && new Date() < new Date(chapter.nextUnlockTime)) {\n        return {\n            canShowPreview: true,\n            message: formatReleaseTime(chapter.nextUnlockTime),\n            showTimer: true\n        };\n    }\n    // 4. チャプター状態による表示判定\n    if (chapter.status === \"NOT_STARTED\") {\n        return {\n            canShowPreview: true,\n            message: \"このチャプターを学習しましょう\",\n            showTimer: false\n        };\n    }\n    // 5. 制限時間の表示\n    return {\n        canShowPreview: true,\n        message: chapter.timeOutAt ? formatTimeRemaining(chapter.timeOutAt) : \"完了\",\n        showTimer: !!chapter.timeOutAt\n    };\n};\nconst useCurrentCourse = ()=>{\n    var _courseData_course, _courseData;\n    _s();\n    const [courseData, setCourseData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [navigationState, setNavigationState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        prevChapter: null,\n        nextChapter: null,\n        canNavigatePrev: false,\n        canNavigateNext: false\n    });\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    // チャプターの進捗状態を判定\n    const determineChapterProgress = (chapter)=>{\n        if (!chapter) return \"NOT_STARTED\";\n        switch(chapter.status){\n            case \"COMPLETED\":\n                return \"COMPLETED\";\n            case \"LESSON_IN_PROGRESS\":\n                return \"LESSON_IN_PROGRESS\";\n            case \"LESSON_COMPLETED\":\n                return \"LESSON_COMPLETED\";\n            case \"TASK_IN_PROGRESS\":\n                return \"TASK_IN_PROGRESS\";\n            case \"FAILED\":\n                return \"FAILED\";\n            default:\n                return \"NOT_STARTED\";\n        }\n    };\n    const calculateNextUnlockTime = (releaseTime, startedAt)=>{\n        if (!releaseTime || !startedAt) return undefined;\n        return new Date(new Date(startedAt).getTime() + releaseTime * MILLISECONDS_PER_HOUR);\n    };\n    const getButtonState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        var _courseData_course_chapters, _courseData_course, _courseData;\n        const currentChapter = (_courseData = courseData) === null || _courseData === void 0 ? void 0 : (_courseData_course = _courseData.course) === null || _courseData_course === void 0 ? void 0 : (_courseData_course_chapters = _courseData_course.chapters) === null || _courseData_course_chapters === void 0 ? void 0 : _courseData_course_chapters[0];\n        if (!currentChapter) {\n            return {\n                mainText: \"このコースを学習する\",\n                showButton: true,\n                isWaitingForRelease: false\n            };\n        }\n        const unlockTime = calculateNextUnlockTime(currentChapter.releaseTime, courseData.startedAt);\n        if (unlockTime && new Date() < unlockTime) {\n            return {\n                mainText: \"このチャプターを学習する\",\n                showButton: false,\n                isWaitingForRelease: true,\n                releaseTimeMessage: formatReleaseTime(unlockTime)\n            };\n        }\n        return {\n            mainText: \"このチャプターを学習する\",\n            showButton: true,\n            isWaitingForRelease: false\n        };\n    }, [\n        courseData\n    ]);\n    const updateNavigationState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (currentChapter)=>{\n        var _courseData_course, _courseData;\n        if (!((_courseData = courseData) === null || _courseData === void 0 ? void 0 : (_courseData_course = _courseData.course) === null || _courseData_course === void 0 ? void 0 : _courseData_course.chapters)) return;\n        const response = await _lib_api_courses__WEBPACK_IMPORTED_MODULE_1__.courseApi.getChaptersProgress(courseData.courseId);\n        if (!response.success || !response.data) return;\n        const chapters = response.data;\n        const currentIndex = chapters.findIndex((ch)=>ch.id === currentChapter.id);\n        const prevChapter = currentIndex > 0 ? chapters[currentIndex - 1] : null;\n        const nextChapter = currentIndex < chapters.length - 1 ? chapters[currentIndex + 1] : null;\n        const canNavigatePrev = !!prevChapter;\n        const canNavigateNext = !!nextChapter && currentChapter.status === \"COMPLETED\";\n        setNavigationState({\n            prevChapter: prevChapter ? {\n                ...prevChapter,\n                status: prevChapter.status,\n                isLocked: prevChapter.isLocked,\n                canAccess: prevChapter.canAccess\n            } : null,\n            nextChapter: nextChapter ? {\n                ...nextChapter,\n                status: nextChapter.status,\n                isLocked: nextChapter.isLocked,\n                canAccess: nextChapter.canAccess\n            } : null,\n            canNavigatePrev,\n            canNavigateNext\n        });\n    }, [\n        courseData\n    ]);\n    const switchToChapter = async (newChapter)=>{\n        if (!courseData) return;\n        // アクセス制御のチェック\n        try {\n            setLoading(true);\n            const response = await _lib_api_courses__WEBPACK_IMPORTED_MODULE_1__.courseApi.getChaptersProgress(courseData.courseId);\n            if (!response.success || !response.data) {\n                throw new Error(\"チャプター情報の取得に失敗しました\");\n            }\n            // 最新のチャプター情報を取得\n            const latestChapterInfo = response.data.find((ch)=>ch.id === newChapter.id);\n            if (!latestChapterInfo) {\n                throw new Error(\"チャプター情報が見つかりません\");\n            }\n            // 前のチャプターが完了していない場合はアクセス不可\n            const prevChapter = response.data.find((ch)=>ch.orderIndex === latestChapterInfo.orderIndex - 1);\n            if (prevChapter && prevChapter.status !== \"COMPLETED\" && !latestChapterInfo.canAccess) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"前のチャプターを完了させてください\");\n                return;\n            }\n            const updatedChapter = {\n                ...latestChapterInfo,\n                courseId: courseData.courseId\n            };\n            const updatedCourseData = {\n                ...courseData,\n                course: {\n                    ...courseData.course,\n                    chapters: [\n                        updatedChapter\n                    ]\n                }\n            };\n            setCourseData(updatedCourseData);\n            await updateNavigationState(updatedCourseData.course.chapters[0]);\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"チャプターの切り替えに失敗しました\");\n        } finally{\n            setLoading(false);\n        }\n    };\n    // タイムアウトをチェックする関数\n    const checkTimeRemaining = (timeRemaining)=>{\n        if (!timeRemaining) return false;\n        const now = new Date();\n        const timeOutAt = new Date(timeRemaining.timeOutAt);\n        return now >= timeOutAt;\n    };\n    const parseChapterContent = (chapter)=>{\n        if (!chapter || !chapter.content) return null;\n        // ChapterContent型に厳密に合わせた返り値\n        return {\n            type: chapter.content.type,\n            videoId: chapter.content.videoId,\n            transcription: chapter.content.transcription,\n            thumbnailUrl: chapter.content.thumbnailUrl,\n            submission: chapter.submission,\n            lessonWatchRate: chapter.lessonWatchRate\n        };\n    };\n    const loadCurrentCourse = async ()=>{\n        try {\n            setLoading(true);\n            const response = await _lib_api_courses__WEBPACK_IMPORTED_MODULE_1__.courseApi.getCurrentUserCourse();\n            if (!response.success || !response.data) {\n                throw new Error(\"コースデータの取得に失敗しました\");\n            }\n            // コースデータのフォーマット\n            const formattedData = {\n                id: response.data.id,\n                userId: response.data.userId || \"\",\n                courseId: response.data.id,\n                isActive: response.data.status === \"active\",\n                status: response.data.status,\n                startedAt: response.data.timeInfo.startedAt,\n                completedAt: response.data.timeInfo.completedAt || null,\n                progress: response.data.progress || 0,\n                course: {\n                    id: response.data.id,\n                    title: response.data.title,\n                    description: response.data.description,\n                    level: response.data.levelRequired,\n                    rankRequired: response.data.rankRequired,\n                    levelRequired: response.data.levelRequired,\n                    timeLimit: response.data.timeLimit,\n                    timeRemaining: response.data.timeRemaining,\n                    chapters: response.data.chapters || []\n                }\n            };\n            // 現在のチャプターを取得\n            console.log(\"【Step 3】getCurrentChapter呼び出し開始\", {\n                courseId: formattedData.courseId\n            });\n            const chapterResponse = await _lib_api_courses__WEBPACK_IMPORTED_MODULE_1__.courseApi.getCurrentChapter(formattedData.courseId);\n            // loadCurrentCourse 関数内の該当部分を修正\n            if (chapterResponse.success && chapterResponse.data) {\n                var _chapterResponse_data;\n                const currentChapter = ((_chapterResponse_data = chapterResponse.data) === null || _chapterResponse_data === void 0 ? void 0 : _chapterResponse_data.chapterId) ? formattedData.course.chapters.find((chapter)=>{\n                    var _chapterResponse_data;\n                    return chapter.id === ((_chapterResponse_data = chapterResponse.data) === null || _chapterResponse_data === void 0 ? void 0 : _chapterResponse_data.chapterId);\n                }) : null;\n                if (currentChapter) {\n                    // chapterResponse.dataの情報を現在のチャプターにマージ\n                    const mergedChapter = {\n                        ...currentChapter,\n                        startedAt: chapterResponse.data.startedAt ? new Date(chapterResponse.data.startedAt).toISOString() : undefined,\n                        status: chapterResponse.data.status,\n                        isTimedOut: chapterResponse.data.isTimedOut,\n                        lessonWatchRate: chapterResponse.data.lessonWatchRate,\n                        score: chapterResponse.data.score,\n                        // CourseData['course']['chapters'][0]の型に合わせて必須プロパティを追加\n                        courseId: formattedData.courseId,\n                        title: currentChapter.title,\n                        subtitle: currentChapter.subtitle,\n                        orderIndex: currentChapter.orderIndex,\n                        timeLimit: currentChapter.timeLimit,\n                        isVisible: currentChapter.isVisible,\n                        content: currentChapter.content,\n                        isLocked: false,\n                        canAccess: true\n                    };\n                    // マージしたチャプターで更新\n                    formattedData.course.chapters = [\n                        mergedChapter\n                    ];\n                    await updateNavigationState(mergedChapter);\n                }\n            }\n            setCourseData(formattedData);\n            if (checkTimeRemaining(formattedData.course.timeRemaining)) {\n                setTimeout(loadCurrentCourse, 1000);\n            }\n        } catch (error) {\n            console.error(\"loadCurrentCourse失敗:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"コース情報の取得に失敗しました\");\n        } finally{\n            setLoading(false);\n        }\n    };\n    const handleContinueLearning = async (targetChapterId)=>{\n        if (!courseData) return;\n        try {\n            var _currentChapter;\n            // タイムアウトチェック\n            if (checkTimeRemaining(courseData.course.timeRemaining)) {\n                await loadCurrentCourse();\n                return;\n            }\n            // 現在表示中のチャプターのIDを使用\n            const currentChapter = courseData.course.chapters[0];\n            const chapterId = (_currentChapter = currentChapter) === null || _currentChapter === void 0 ? void 0 : _currentChapter.id;\n            if (!chapterId) {\n                throw new Error(\"Chapter ID not found\");\n            }\n            await loadCurrentCourse();\n            router.push(\"/user/courses/\".concat(courseData.courseId, \"/chapters/\").concat(chapterId));\n        } catch (error) {\n            console.error(\"Error in handleContinueLearning:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"チャプターへの移動に失敗しました\");\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        loadCurrentCourse();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        var _courseData_course_chapters, _courseData_course, _courseData;\n        if ((_courseData = courseData) === null || _courseData === void 0 ? void 0 : (_courseData_course = _courseData.course) === null || _courseData_course === void 0 ? void 0 : (_courseData_course_chapters = _courseData_course.chapters) === null || _courseData_course_chapters === void 0 ? void 0 : _courseData_course_chapters[0]) {\n            updateNavigationState(courseData.course.chapters[0]);\n        }\n    }, [\n        (_courseData = courseData) === null || _courseData === void 0 ? void 0 : (_courseData_course = _courseData.course) === null || _courseData_course === void 0 ? void 0 : _courseData_course.chapters,\n        updateNavigationState\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        var _courseData_course_chapters, _courseData_course, _courseData, _currentChapter, _courseData1;\n        const currentChapter = (_courseData = courseData) === null || _courseData === void 0 ? void 0 : (_courseData_course = _courseData.course) === null || _courseData_course === void 0 ? void 0 : (_courseData_course_chapters = _courseData_course.chapters) === null || _courseData_course_chapters === void 0 ? void 0 : _courseData_course_chapters[0];\n        if (!((_currentChapter = currentChapter) === null || _currentChapter === void 0 ? void 0 : _currentChapter.releaseTime) || !((_courseData1 = courseData) === null || _courseData1 === void 0 ? void 0 : _courseData1.startedAt)) return;\n        const unlockTime = new Date(new Date(courseData.startedAt).getTime() + currentChapter.releaseTime * MILLISECONDS_PER_HOUR);\n        const now = new Date();\n        if (now < unlockTime) {\n            const timeout = setTimeout(()=>{\n                loadCurrentCourse();\n            }, unlockTime.getTime() - now.getTime());\n            return ()=>clearTimeout(timeout);\n        }\n    }, [\n        courseData\n    ]);\n    return {\n        courseData,\n        loading,\n        buttonState: getButtonState(),\n        navigationState,\n        determineChapterProgress,\n        handleContinueLearning,\n        parseChapterContent,\n        refreshCourse: loadCurrentCourse,\n        switchToChapter,\n        getChapterDisplayState\n    };\n};\n_s(useCurrentCourse, \"a54gSO3qjE+QsFD4t8YWtIachek=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter\n    ];\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (useCurrentCourse);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/user/home/components/hooks/useCurrentCourse.tsx\n"));

/***/ })

});