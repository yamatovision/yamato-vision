"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/user/home/page",{

/***/ "(app-pages-browser)/./src/app/user/home/components/hooks/useCurrentCourse.tsx":
/*!*****************************************************************!*\
  !*** ./src/app/user/home/components/hooks/useCurrentCourse.tsx ***!
  \*****************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isReleaseTimeValid: function() { return /* binding */ isReleaseTimeValid; },\n/* harmony export */   useCurrentCourse: function() { return /* binding */ useCurrentCourse; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_api_courses__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/api/courses */ \"(app-pages-browser)/./src/lib/api/courses.ts\");\n/* harmony import */ var _lib_utils_formatTime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils/formatTime */ \"(app-pages-browser)/./src/lib/utils/formatTime.ts\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n// src/app/user/home/components/hooks/useCurrentCourse.tsx\nvar _s = $RefreshSig$();\n\n\n\n\n\nconst isReleaseTimeValid = (releaseTime, courseStartDate)=>{\n    if (!courseStartDate) return true;\n    const startDate = new Date(courseStartDate);\n    const releaseDate = new Date(startDate.getTime() + releaseTime * 24 * 60 * 60 * 1000);\n    return new Date() >= releaseDate;\n};\nconst formatReleaseTime = (date)=>{\n    const releaseDate = new Date(date);\n    const now = new Date();\n    const diffHours = Math.ceil((releaseDate.getTime() - now.getTime()) / (1000 * 60 * 60));\n    return \"解放まであと\".concat(diffHours, \"時間\");\n};\nconst formatTimeRemaining = (timeOutAt)=>{\n    const endTime = new Date(timeOutAt);\n    const now = new Date();\n    const remainingMs = endTime.getTime() - now.getTime();\n    if (remainingMs <= 0) return \"完了\";\n    return \"残り\".concat((0,_lib_utils_formatTime__WEBPACK_IMPORTED_MODULE_2__.formatTime)(Math.floor(remainingMs / 1000)));\n};\n// useCurrentCourse.tsx に追加する基本的な状態判定関数\nconst getChapterDisplayState = (chapter, courseStatus, previousChapter)=>{\n    // 1. コース完了系の状態判定\n    if ([\n        \"COMPLETED\",\n        \"FAILED\",\n        \"PERFECT\"\n    ].includes(courseStatus)) {\n        return {\n            canShowPreview: true,\n            message: \"完了\",\n            showTimer: false\n        };\n    }\n    // 2. 前のチャプターによるアクセス判定\n    if (previousChapter && previousChapter.status !== \"COMPLETED\") {\n        return {\n            canShowPreview: false,\n            message: null,\n            showTimer: false\n        };\n    }\n    // 3. 時間待ち判定\n    if (chapter.nextUnlockTime && new Date() < new Date(chapter.nextUnlockTime)) {\n        return {\n            canShowPreview: true,\n            message: formatReleaseTime(chapter.nextUnlockTime),\n            showTimer: true\n        };\n    }\n    // 4. チャプター状態による表示判定\n    if (chapter.status === \"NOT_STARTED\") {\n        return {\n            canShowPreview: true,\n            message: \"このチャプターを学習しましょう\",\n            showTimer: false\n        };\n    }\n    // 5. 制限時間の表示\n    return {\n        canShowPreview: true,\n        message: chapter.timeOutAt ? formatTimeRemaining(chapter.timeOutAt) : \"完了\",\n        showTimer: !!chapter.timeOutAt\n    };\n};\nconst useCurrentCourse = ()=>{\n    var _courseData_course, _courseData;\n    _s();\n    const [courseData, setCourseData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [navigationState, setNavigationState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        prevChapter: null,\n        nextChapter: null,\n        canNavigatePrev: false,\n        canNavigateNext: false\n    });\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    // チャプターの進捗状態を判定\n    const determineChapterProgress = (chapter)=>{\n        if (!chapter) return \"NOT_STARTED\";\n        switch(chapter.status){\n            case \"COMPLETED\":\n                return \"COMPLETED\";\n            case \"LESSON_IN_PROGRESS\":\n                return \"LESSON_IN_PROGRESS\";\n            case \"LESSON_COMPLETED\":\n                return \"LESSON_COMPLETED\";\n            case \"TASK_IN_PROGRESS\":\n                return \"TASK_IN_PROGRESS\";\n            case \"FAILED\":\n                return \"FAILED\";\n            default:\n                return \"NOT_STARTED\";\n        }\n    };\n    const getButtonState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        var _courseData_course_chapters, _courseData_course, _courseData;\n        if (!((_courseData = courseData) === null || _courseData === void 0 ? void 0 : (_courseData_course = _courseData.course) === null || _courseData_course === void 0 ? void 0 : (_courseData_course_chapters = _courseData_course.chapters) === null || _courseData_course_chapters === void 0 ? void 0 : _courseData_course_chapters.length)) {\n            return {\n                mainText: \"このコースを学習する\",\n                showButton: true,\n                isWaitingForRelease: false\n            };\n        }\n        const currentChapter = courseData.course.chapters[0];\n        const chapterStatus = determineChapterProgress(currentChapter);\n        // 解放待ち状態のチェック\n        if (currentChapter.nextUnlockTime && new Date() < new Date(currentChapter.nextUnlockTime)) {\n            return {\n                mainText: \"このチャプターを学習する\",\n                showButton: false,\n                isWaitingForRelease: true,\n                releaseTimeMessage: formatReleaseTime(currentChapter.nextUnlockTime),\n                nextChapter: {\n                    id: currentChapter.id,\n                    title: currentChapter.title,\n                    orderIndex: currentChapter.orderIndex\n                }\n            };\n        }\n        // 通常状態\n        let mainText = \"このチャプターを学習する\";\n        if (chapterStatus === \"COMPLETED\") {\n            mainText = \"このチャプターを復習する\";\n        } else if (chapterStatus === \"LESSON_IN_PROGRESS\" || chapterStatus === \"TASK_IN_PROGRESS\") {\n            mainText = \"このチャプターを学習する\";\n        }\n        return {\n            mainText,\n            showButton: true,\n            isWaitingForRelease: false,\n            nextChapter: currentChapter ? {\n                id: currentChapter.id,\n                title: currentChapter.title,\n                orderIndex: currentChapter.orderIndex\n            } : undefined\n        };\n    }, [\n        courseData,\n        determineChapterProgress\n    ]);\n    const updateNavigationState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (currentChapter)=>{\n        var _courseData_course, _courseData;\n        if (!((_courseData = courseData) === null || _courseData === void 0 ? void 0 : (_courseData_course = _courseData.course) === null || _courseData_course === void 0 ? void 0 : _courseData_course.chapters)) return;\n        const response = await _lib_api_courses__WEBPACK_IMPORTED_MODULE_1__.courseApi.getChaptersProgress(courseData.courseId);\n        if (!response.success || !response.data) return;\n        const chapters = response.data;\n        const currentIndex = chapters.findIndex((ch)=>ch.id === currentChapter.id);\n        const prevChapter = currentIndex > 0 ? chapters[currentIndex - 1] : null;\n        const nextChapter = currentIndex < chapters.length - 1 ? chapters[currentIndex + 1] : null;\n        const canNavigatePrev = !!prevChapter;\n        const canNavigateNext = !!nextChapter && currentChapter.status === \"COMPLETED\";\n        setNavigationState({\n            prevChapter: prevChapter ? {\n                ...prevChapter,\n                status: prevChapter.status,\n                isLocked: prevChapter.isLocked,\n                canAccess: prevChapter.canAccess\n            } : null,\n            nextChapter: nextChapter ? {\n                ...nextChapter,\n                status: nextChapter.status,\n                isLocked: nextChapter.isLocked,\n                canAccess: nextChapter.canAccess\n            } : null,\n            canNavigatePrev,\n            canNavigateNext\n        });\n    }, [\n        courseData\n    ]);\n    const switchToChapter = async (newChapter)=>{\n        if (!courseData) return;\n        // アクセス制御のチェック\n        try {\n            setLoading(true);\n            const response = await _lib_api_courses__WEBPACK_IMPORTED_MODULE_1__.courseApi.getChaptersProgress(courseData.courseId);\n            if (!response.success || !response.data) {\n                throw new Error(\"チャプター情報の取得に失敗しました\");\n            }\n            // 最新のチャプター情報を取得\n            const latestChapterInfo = response.data.find((ch)=>ch.id === newChapter.id);\n            if (!latestChapterInfo) {\n                throw new Error(\"チャプター情報が見つかりません\");\n            }\n            // 前のチャプターが完了していない場合はアクセス不可\n            const prevChapter = response.data.find((ch)=>ch.orderIndex === latestChapterInfo.orderIndex - 1);\n            if (prevChapter && prevChapter.status !== \"COMPLETED\" && !latestChapterInfo.canAccess) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"前のチャプターを完了させてください\");\n                return;\n            }\n            const updatedChapter = {\n                ...latestChapterInfo,\n                courseId: courseData.courseId\n            };\n            const updatedCourseData = {\n                ...courseData,\n                course: {\n                    ...courseData.course,\n                    chapters: [\n                        updatedChapter\n                    ]\n                }\n            };\n            setCourseData(updatedCourseData);\n            await updateNavigationState(updatedCourseData.course.chapters[0]);\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"チャプターの切り替えに失敗しました\");\n        } finally{\n            setLoading(false);\n        }\n    };\n    // タイムアウトをチェックする関数\n    const checkTimeRemaining = (timeRemaining)=>{\n        if (!timeRemaining) return false;\n        const now = new Date();\n        const timeOutAt = new Date(timeRemaining.timeOutAt);\n        return now >= timeOutAt;\n    };\n    const parseChapterContent = (chapter)=>{\n        if (!chapter || !chapter.content) return null;\n        // ChapterContent型に厳密に合わせた返り値\n        return {\n            type: chapter.content.type,\n            videoId: chapter.content.videoId,\n            transcription: chapter.content.transcription,\n            thumbnailUrl: chapter.content.thumbnailUrl,\n            submission: chapter.submission,\n            lessonWatchRate: chapter.lessonWatchRate\n        };\n    };\n    const loadCurrentCourse = async ()=>{\n        try {\n            setLoading(true);\n            const response = await _lib_api_courses__WEBPACK_IMPORTED_MODULE_1__.courseApi.getCurrentUserCourse();\n            if (!response.success || !response.data) {\n                throw new Error(\"コースデータの取得に失敗しました\");\n            }\n            // コースデータのフォーマット\n            const formattedData = {\n                id: response.data.id,\n                userId: response.data.userId || \"\",\n                courseId: response.data.id,\n                isActive: response.data.status === \"active\",\n                status: response.data.status,\n                startedAt: response.data.timeInfo.startedAt,\n                completedAt: response.data.timeInfo.completedAt || null,\n                progress: response.data.progress || 0,\n                course: {\n                    id: response.data.id,\n                    title: response.data.title,\n                    description: response.data.description,\n                    level: response.data.levelRequired,\n                    rankRequired: response.data.rankRequired,\n                    levelRequired: response.data.levelRequired,\n                    timeLimit: response.data.timeLimit,\n                    timeRemaining: response.data.timeRemaining,\n                    chapters: response.data.chapters || []\n                }\n            };\n            // 現在のチャプターを取得\n            console.log(\"【Step 3】getCurrentChapter呼び出し開始\", {\n                courseId: formattedData.courseId\n            });\n            const chapterResponse = await _lib_api_courses__WEBPACK_IMPORTED_MODULE_1__.courseApi.getCurrentChapter(formattedData.courseId);\n            // loadCurrentCourse 関数内の該当部分を修正\n            if (chapterResponse.success && chapterResponse.data) {\n                var _chapterResponse_data;\n                const currentChapter = ((_chapterResponse_data = chapterResponse.data) === null || _chapterResponse_data === void 0 ? void 0 : _chapterResponse_data.chapterId) ? formattedData.course.chapters.find((chapter)=>{\n                    var _chapterResponse_data;\n                    return chapter.id === ((_chapterResponse_data = chapterResponse.data) === null || _chapterResponse_data === void 0 ? void 0 : _chapterResponse_data.chapterId);\n                }) : null;\n                if (currentChapter) {\n                    // chapterResponse.dataの情報を現在のチャプターにマージ\n                    const mergedChapter = {\n                        ...currentChapter,\n                        startedAt: chapterResponse.data.startedAt ? new Date(chapterResponse.data.startedAt).toISOString() : undefined,\n                        status: chapterResponse.data.status,\n                        isTimedOut: chapterResponse.data.isTimedOut,\n                        lessonWatchRate: chapterResponse.data.lessonWatchRate,\n                        score: chapterResponse.data.score,\n                        // CourseData['course']['chapters'][0]の型に合わせて必須プロパティを追加\n                        courseId: formattedData.courseId,\n                        title: currentChapter.title,\n                        subtitle: currentChapter.subtitle,\n                        orderIndex: currentChapter.orderIndex,\n                        timeLimit: currentChapter.timeLimit,\n                        isVisible: currentChapter.isVisible,\n                        content: currentChapter.content,\n                        isLocked: false,\n                        canAccess: true\n                    };\n                    // マージしたチャプターで更新\n                    formattedData.course.chapters = [\n                        mergedChapter\n                    ];\n                    await updateNavigationState(mergedChapter);\n                }\n            }\n            setCourseData(formattedData);\n            if (checkTimeRemaining(formattedData.course.timeRemaining)) {\n                setTimeout(loadCurrentCourse, 1000);\n            }\n        } catch (error) {\n            console.error(\"loadCurrentCourse失敗:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"コース情報の取得に失敗しました\");\n        } finally{\n            setLoading(false);\n        }\n    };\n    const handleContinueLearning = async (targetChapterId)=>{\n        if (!courseData) return;\n        try {\n            var _currentChapter;\n            // タイムアウトチェック\n            if (checkTimeRemaining(courseData.course.timeRemaining)) {\n                await loadCurrentCourse();\n                return;\n            }\n            // 現在表示中のチャプターのIDを使用\n            const currentChapter = courseData.course.chapters[0];\n            const chapterId = (_currentChapter = currentChapter) === null || _currentChapter === void 0 ? void 0 : _currentChapter.id;\n            if (!chapterId) {\n                throw new Error(\"Chapter ID not found\");\n            }\n            await loadCurrentCourse();\n            router.push(\"/user/courses/\".concat(courseData.courseId, \"/chapters/\").concat(chapterId));\n        } catch (error) {\n            console.error(\"Error in handleContinueLearning:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.toast.error(\"チャプターへの移動に失敗しました\");\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        loadCurrentCourse();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        var _courseData_course_chapters, _courseData_course, _courseData;\n        if ((_courseData = courseData) === null || _courseData === void 0 ? void 0 : (_courseData_course = _courseData.course) === null || _courseData_course === void 0 ? void 0 : (_courseData_course_chapters = _courseData_course.chapters) === null || _courseData_course_chapters === void 0 ? void 0 : _courseData_course_chapters[0]) {\n            updateNavigationState(courseData.course.chapters[0]);\n        }\n    }, [\n        (_courseData = courseData) === null || _courseData === void 0 ? void 0 : (_courseData_course = _courseData.course) === null || _courseData_course === void 0 ? void 0 : _courseData_course.chapters,\n        updateNavigationState\n    ]);\n    return {\n        courseData,\n        loading,\n        buttonState: getButtonState(),\n        navigationState,\n        determineChapterProgress,\n        handleContinueLearning,\n        parseChapterContent,\n        refreshCourse: loadCurrentCourse,\n        switchToChapter,\n        getChapterDisplayState\n    };\n};\n_s(useCurrentCourse, \"5LkpFyGMlPOXmUjCX887PTKYG3s=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter\n    ];\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (useCurrentCourse);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvdXNlci9ob21lL2NvbXBvbmVudHMvaG9va3MvdXNlQ3VycmVudENvdXJzZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsMERBQTBEOztBQUVEO0FBQ1g7QUFDTTtBQVNSO0FBQ0o7QUFFakMsTUFBTU8scUJBQXFCLENBQUNDLGFBQXFCQztJQUN0RCxJQUFJLENBQUNBLGlCQUFpQixPQUFPO0lBQzdCLE1BQU1DLFlBQVksSUFBSUMsS0FBS0Y7SUFDM0IsTUFBTUcsY0FBYyxJQUFJRCxLQUFLRCxVQUFVRyxPQUFPLEtBQUtMLGNBQWMsS0FBSyxLQUFLLEtBQUs7SUFDaEYsT0FBTyxJQUFJRyxVQUFVQztBQUN2QixFQUFFO0FBZ0VGLE1BQU1FLG9CQUFvQixDQUFDQztJQUN6QixNQUFNSCxjQUFjLElBQUlELEtBQUtJO0lBQzdCLE1BQU1DLE1BQU0sSUFBSUw7SUFDaEIsTUFBTU0sWUFBWUMsS0FBS0MsSUFBSSxDQUFDLENBQUNQLFlBQVlDLE9BQU8sS0FBS0csSUFBSUgsT0FBTyxFQUFDLElBQU0sUUFBTyxLQUFLLEVBQUM7SUFFcEYsT0FBTyxTQUFtQixPQUFWSSxXQUFVO0FBQzVCO0FBRUEsTUFBTUcsc0JBQXNCLENBQUNDO0lBQzNCLE1BQU1DLFVBQVUsSUFBSVgsS0FBS1U7SUFDekIsTUFBTUwsTUFBTSxJQUFJTDtJQUNoQixNQUFNWSxjQUFjRCxRQUFRVCxPQUFPLEtBQUtHLElBQUlILE9BQU87SUFFbkQsSUFBSVUsZUFBZSxHQUFHLE9BQU87SUFFN0IsT0FBTyxLQUFnRCxPQUEzQ25CLGlFQUFVQSxDQUFDYyxLQUFLTSxLQUFLLENBQUNELGNBQWM7QUFDbEQ7QUFTQSx1Q0FBdUM7QUFDdkMsTUFBTUUseUJBQXlCLENBQzdCQyxTQUNBQyxjQUNBQztJQUVBLGlCQUFpQjtJQUNqQixJQUFJO1FBQUM7UUFBYTtRQUFVO0tBQVUsQ0FBQ0MsUUFBUSxDQUFDRixlQUFlO1FBQzdELE9BQU87WUFD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LE1BQU0sQ0FBQ0MsUUFBUSxDQUFDLEVBQUU7UUFDckQ7SUFDRixHQUFHO1NBQUNkLGNBQUFBLHdCQUFBQSxtQ0FBQUEscUJBQUFBLFlBQVlhLE1BQU0sY0FBbEJiLHlDQUFBQSxtQkFBb0JjLFFBQVE7UUFBRVk7S0FBc0I7SUFDdkQsT0FBTztRQUNKMUI7UUFDQUU7UUFDQWtGLGFBQWF4RTtRQUNiUjtRQUNBTztRQUNBc0U7UUFDQWxDO1FBQ0FzQyxlQUFlOUI7UUFDZmxCO1FBQ0FoRDtJQUNGO0FBQ0YsRUFBRTtHQXZVV1U7O1FBU0k5QixzREFBU0E7OztBQWdVMUIsK0RBQWU4QixnQkFBZ0JBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwcC91c2VyL2hvbWUvY29tcG9uZW50cy9ob29rcy91c2VDdXJyZW50Q291cnNlLnRzeD83MDQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9hcHAvdXNlci9ob21lL2NvbXBvbmVudHMvaG9va3MvdXNlQ3VycmVudENvdXJzZS50c3hcblxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb3Vyc2VBcGkgfSBmcm9tICdAL2xpYi9hcGkvY291cnNlcyc7XG5pbXBvcnQgeyBmb3JtYXRUaW1lIH0gZnJvbSAnQC9saWIvdXRpbHMvZm9ybWF0VGltZSc7XG5pbXBvcnQgeyBDaGFwdGVyLCBDaGFwdGVyQ29udGVudCwgQ291cnNlRGF0YSwgIEV4YW1TZXR0aW5ncyBcbn0gZnJvbSAnQC90eXBlcy9jb3Vyc2UnO1xuaW1wb3J0IHsgXG4gIENoYXB0ZXJQcmV2aWV3RGF0YSxcbiAgQ2hhcHRlckV2YWx1YXRpb25TdGF0dXMgIC8vIOi/veWKoFxufSBmcm9tICdAL3R5cGVzL2NoYXB0ZXInO1xuaW1wb3J0IHsgQ2hhcHRlclByb2dyZXNzU3RhdHVzLENvdXJzZVN0YXR1cyB9IGZyb20gJ0AvdHlwZXMvc3RhdHVzJztcblxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uJztcbmltcG9ydCB7IHRvYXN0IH0gZnJvbSAncmVhY3QtaG90LXRvYXN0JztcblxuZXhwb3J0IGNvbnN0IGlzUmVsZWFzZVRpbWVWYWxpZCA9IChyZWxlYXNlVGltZTogbnVtYmVyLCBjb3Vyc2VTdGFydERhdGU6IHN0cmluZyB8IG51bGwpOiBib29sZWFuID0+IHtcbiAgaWYgKCFjb3Vyc2VTdGFydERhdGUpIHJldHVybiB0cnVlO1xuICBjb25zdCBzdGFydERhdGUgPSBuZXcgRGF0ZShjb3Vyc2VTdGFydERhdGUpO1xuICBjb25zdCByZWxlYXNlRGF0ZSA9IG5ldyBEYXRlKHN0YXJ0RGF0ZS5nZXRUaW1lKCkgKyByZWxlYXNlVGltZSAqIDI0ICogNjAgKiA2MCAqIDEwMDApO1xuICByZXR1cm4gbmV3IERhdGUoKSA+PSByZWxlYXNlRGF0ZTtcbn07XG5pbnRlcmZhY2UgTmF2aWdhdGlvbkNoYXB0ZXIge1xuICBpZDogc3RyaW5nO1xuICB0aXRsZTogc3RyaW5nO1xuICBvcmRlckluZGV4OiBudW1iZXI7XG4gIHN0YXR1czogQ2hhcHRlclByb2dyZXNzU3RhdHVzO1xuICBpc0xvY2tlZDogYm9vbGVhbjtcbiAgY2FuQWNjZXNzOiBib29sZWFuO1xuICBsZXNzb25XYXRjaFJhdGU6IG51bWJlcjsgIC8vIOi/veWKoFxuICBpc0ZpbmFsRXhhbTogYm9vbGVhbjsgICAgIC8vIOi/veWKoFxuICBjb250ZW50PzogQ2hhcHRlckNvbnRlbnQ7IC8vIOi/veWKoFxuICBzdWJ0aXRsZT86IHN0cmluZzsgICAgICAgIC8vIOi/veWKoFxuICB0aW1lT3V0QXQ/OiBEYXRlIHwgbnVsbDsgIC8vIOi/veWKoFxuICByZWxlYXNlVGltZT86IERhdGUgfCBudWxsOy8vIOi/veWKoFxuICB0aHVtYm5haWxVcmw/OiBzdHJpbmc7ICAgIC8vIOi/veWKoFxuICBzY29yZT86IG51bWJlcjsgICAgICAgICAgIC8vIOi/veWKoFxuICBldmFsdWF0aW9uU3RhdHVzPzogQ2hhcHRlckV2YWx1YXRpb25TdGF0dXM7IC8vIOi/veWKoFxuICBuZXh0VW5sb2NrVGltZT86IERhdGU7ICAgIC8vIOi/veWKoFxuICBleGFtU2V0dGluZ3M/OiBFeGFtU2V0dGluZ3M7IC8vIOi/veWKoFxufVxuXG5pbnRlcmZhY2UgTmF2aWdhdGlvblN0YXRlIHtcbiAgcHJldkNoYXB0ZXI6IE5hdmlnYXRpb25DaGFwdGVyIHwgbnVsbDtcbiAgbmV4dENoYXB0ZXI6IE5hdmlnYXRpb25DaGFwdGVyIHwgbnVsbDtcbiAgY2FuTmF2aWdhdGVQcmV2OiBib29sZWFuO1xuICBjYW5OYXZpZ2F0ZU5leHQ6IGJvb2xlYW47XG59XG5cbmludGVyZmFjZSBVc2VDdXJyZW50Q291cnNlU3RhdGUge1xuICBjb3Vyc2VEYXRhOiBDb3Vyc2VEYXRhIHwgbnVsbDtcbiAgbG9hZGluZzogYm9vbGVhbjtcbiAgbmF2aWdhdGlvblN0YXRlOiBOYXZpZ2F0aW9uU3RhdGU7XG59XG5cbmludGVyZmFjZSBCdXR0b25TdGF0ZSB7XG4gIG1haW5UZXh0OiBzdHJpbmc7XG4gIHNob3dCdXR0b246IGJvb2xlYW47XG4gIGlzV2FpdGluZ0ZvclJlbGVhc2U6IGJvb2xlYW47XG4gIHJlbGVhc2VUaW1lTWVzc2FnZT86IHN0cmluZztcbiAgbmV4dENoYXB0ZXI/OiB7XG4gICAgaWQ6IHN0cmluZztcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIG9yZGVySW5kZXg6IG51bWJlcjtcbiAgfTtcbn1cblxuaW50ZXJmYWNlIFVzZUN1cnJlbnRDb3Vyc2VSZXR1cm4ge1xuICBjb3Vyc2VEYXRhOiBDb3Vyc2VEYXRhIHwgbnVsbDtcbiAgbG9hZGluZzogYm9vbGVhbjtcbiAgYnV0dG9uU3RhdGU6IEJ1dHRvblN0YXRlO1xuICBuYXZpZ2F0aW9uU3RhdGU6IE5hdmlnYXRpb25TdGF0ZTtcbiAgZGV0ZXJtaW5lQ2hhcHRlclByb2dyZXNzOiAoY2hhcHRlcjogYW55KSA9PiBDaGFwdGVyUHJvZ3Jlc3NTdGF0dXM7XG4gIGhhbmRsZUNvbnRpbnVlTGVhcm5pbmc6IChjaGFwdGVySWQ/OiBzdHJpbmcpID0+IFByb21pc2U8dm9pZD47XG4gIHBhcnNlQ2hhcHRlckNvbnRlbnQ6IChjaGFwdGVyOiBhbnkpID0+IENoYXB0ZXJDb250ZW50IHwgbnVsbDtcbiAgcmVmcmVzaENvdXJzZTogKCkgPT4gUHJvbWlzZTx2b2lkPjtcbiAgc3dpdGNoVG9DaGFwdGVyOiAobmV3Q2hhcHRlcjogQ2hhcHRlclByZXZpZXdEYXRhKSA9PiBQcm9taXNlPHZvaWQ+O1xuICBnZXRDaGFwdGVyRGlzcGxheVN0YXRlOiAoXG4gICAgY2hhcHRlcjogQ2hhcHRlclByZXZpZXdEYXRhLFxuICAgIGNvdXJzZVN0YXR1czogQ291cnNlU3RhdHVzLFxuICAgIHByZXZpb3VzQ2hhcHRlcj86IENoYXB0ZXJQcmV2aWV3RGF0YSB8IG51bGxcbiAgKSA9PiBDaGFwdGVyRGlzcGxheVN0YXRlO1xufVxuXG5cbmNvbnN0IGZvcm1hdFJlbGVhc2VUaW1lID0gKGRhdGU6IERhdGUgfCBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICBjb25zdCByZWxlYXNlRGF0ZSA9IG5ldyBEYXRlKGRhdGUpO1xuICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICBjb25zdCBkaWZmSG91cnMgPSBNYXRoLmNlaWwoKHJlbGVhc2VEYXRlLmdldFRpbWUoKSAtIG5vdy5nZXRUaW1lKCkpIC8gKDEwMDAgKiA2MCAqIDYwKSk7XG4gIFxuICByZXR1cm4gYOino+aUvuOBvuOBp+OBguOBqCR7ZGlmZkhvdXJzfeaZgumWk2A7XG59O1xuXG5jb25zdCBmb3JtYXRUaW1lUmVtYWluaW5nID0gKHRpbWVPdXRBdDogRGF0ZSB8IHN0cmluZyk6IHN0cmluZyA9PiB7XG4gIGNvbnN0IGVuZFRpbWUgPSBuZXcgRGF0ZSh0aW1lT3V0QXQpO1xuICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICBjb25zdCByZW1haW5pbmdNcyA9IGVuZFRpbWUuZ2V0VGltZSgpIC0gbm93LmdldFRpbWUoKTtcbiAgXG4gIGlmIChyZW1haW5pbmdNcyA8PSAwKSByZXR1cm4gJ+WujOS6hic7XG4gIFxuICByZXR1cm4gYOaui+OCiiR7Zm9ybWF0VGltZShNYXRoLmZsb29yKHJlbWFpbmluZ01zIC8gMTAwMCkpfWA7XG59O1xuXG4vLyDjg4Hjg6Pjg5fjgr/jg7zooajnpLrnirbmhYvjga7lnovlrprnvqnjgpLov73liqBcbmludGVyZmFjZSBDaGFwdGVyRGlzcGxheVN0YXRlIHtcbiAgY2FuU2hvd1ByZXZpZXc6IGJvb2xlYW47XG4gIG1lc3NhZ2U6IHN0cmluZyB8IG51bGw7XG4gIHNob3dUaW1lcjogYm9vbGVhbjtcbn1cblxuLy8gdXNlQ3VycmVudENvdXJzZS50c3gg44Gr6L+95Yqg44GZ44KL5Z+65pys55qE44Gq54q25oWL5Yik5a6a6Zai5pWwXG5jb25zdCBnZXRDaGFwdGVyRGlzcGxheVN0YXRlID0gKFxuICBjaGFwdGVyOiBDaGFwdGVyUHJldmlld0RhdGEsXG4gIGNvdXJzZVN0YXR1czogQ291cnNlU3RhdHVzLFxuICBwcmV2aW91c0NoYXB0ZXI/OiBDaGFwdGVyUHJldmlld0RhdGEgfCBudWxsXG4pID0+IHtcbiAgLy8gMS4g44Kz44O844K55a6M5LqG57O744Gu54q25oWL5Yik5a6aXG4gIGlmIChbJ0NPTVBMRVRFRCcsICdGQUlMRUQnLCAnUEVSRkVDVCddLmluY2x1ZGVzKGNvdXJzZVN0YXR1cykpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY2FuU2hvd1ByZXZpZXc6IHRydWUsXG4gICAgICBtZXNzYWdlOiAn5a6M5LqGJyxcbiAgICAgIHNob3dUaW1lcjogZmFsc2VcbiAgICB9O1xuICB9XG5cbiAgLy8gMi4g5YmN44Gu44OB44Oj44OX44K/44O844Gr44KI44KL44Ki44Kv44K744K55Yik5a6aXG4gIGlmIChwcmV2aW91c0NoYXB0ZXIgJiYgcHJldmlvdXNDaGFwdGVyLnN0YXR1cyAhPT0gJ0NPTVBMRVRFRCcpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY2FuU2hvd1ByZXZpZXc6IGZhbHNlLFxuICAgICAgbWVzc2FnZTogbnVsbCxcbiAgICAgIHNob3dUaW1lcjogZmFsc2VcbiAgICB9O1xuICB9XG5cblxuICAvLyAzLiDmmYLplpPlvoXjgaHliKTlrppcbiAgaWYgKGNoYXB0ZXIubmV4dFVubG9ja1RpbWUgJiYgbmV3IERhdGUoKSA8IG5ldyBEYXRlKGNoYXB0ZXIubmV4dFVubG9ja1RpbWUpKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNhblNob3dQcmV2aWV3OiB0cnVlLFxuICAgICAgbWVzc2FnZTogZm9ybWF0UmVsZWFzZVRpbWUoY2hhcHRlci5uZXh0VW5sb2NrVGltZSksXG4gICAgICBzaG93VGltZXI6IHRydWVcbiAgICB9O1xuICB9XG5cbiAgLy8gNC4g44OB44Oj44OX44K/44O854q25oWL44Gr44KI44KL6KGo56S65Yik5a6aXG4gIGlmIChjaGFwdGVyLnN0YXR1cyA9PT0gJ05PVF9TVEFSVEVEJykge1xuICAgIHJldHVybiB7XG4gICAgICBjYW5TaG93UHJldmlldzogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6ICfjgZPjga7jg4Hjg6Pjg5fjgr/jg7zjgpLlrabnv5LjgZfjgb7jgZfjgofjgYYnLFxuICAgICAgc2hvd1RpbWVyOiBmYWxzZVxuICAgIH07XG4gIH1cblxuICAvLyA1LiDliLbpmZDmmYLplpPjga7ooajnpLpcbiAgcmV0dXJuIHtcbiAgICBjYW5TaG93UHJldmlldzogdHJ1ZSxcbiAgICBtZXNzYWdlOiBjaGFwdGVyLnRpbWVPdXRBdCA/IGZvcm1hdFRpbWVSZW1haW5pbmcoY2hhcHRlci50aW1lT3V0QXQpIDogJ+WujOS6hicsXG4gICAgc2hvd1RpbWVyOiAhIWNoYXB0ZXIudGltZU91dEF0XG4gIH07XG59O1xuZXhwb3J0IGNvbnN0IHVzZUN1cnJlbnRDb3Vyc2UgPSAoKTogVXNlQ3VycmVudENvdXJzZVJldHVybiA9PiB7XG4gIGNvbnN0IFtjb3Vyc2VEYXRhLCBzZXRDb3Vyc2VEYXRhXSA9IHVzZVN0YXRlPENvdXJzZURhdGEgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtuYXZpZ2F0aW9uU3RhdGUsIHNldE5hdmlnYXRpb25TdGF0ZV0gPSB1c2VTdGF0ZTxOYXZpZ2F0aW9uU3RhdGU+KHtcbiAgICBwcmV2Q2hhcHRlcjogbnVsbCxcbiAgICBuZXh0Q2hhcHRlcjogbnVsbCxcbiAgICBjYW5OYXZpZ2F0ZVByZXY6IGZhbHNlLFxuICAgIGNhbk5hdmlnYXRlTmV4dDogZmFsc2UsXG4gIH0pO1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcblxuXG4gIC8vIOODgeODo+ODl+OCv+ODvOOBrumAsuaNl+eKtuaFi+OCkuWIpOWumlxuICBjb25zdCBkZXRlcm1pbmVDaGFwdGVyUHJvZ3Jlc3MgPSAoY2hhcHRlcjogYW55KTogQ2hhcHRlclByb2dyZXNzU3RhdHVzID0+IHtcbiAgICBpZiAoIWNoYXB0ZXIpIHJldHVybiAnTk9UX1NUQVJURUQnO1xuXG4gICAgc3dpdGNoIChjaGFwdGVyLnN0YXR1cykge1xuICAgICAgY2FzZSAnQ09NUExFVEVEJzpcbiAgICAgICAgcmV0dXJuICdDT01QTEVURUQnO1xuICAgICAgY2FzZSAnTEVTU09OX0lOX1BST0dSRVNTJzpcbiAgICAgICAgcmV0dXJuICdMRVNTT05fSU5fUFJPR1JFU1MnO1xuICAgICAgY2FzZSAnTEVTU09OX0NPTVBMRVRFRCc6XG4gICAgICAgIHJldHVybiAnTEVTU09OX0NPTVBMRVRFRCc7XG4gICAgICBjYXNlICdUQVNLX0lOX1BST0dSRVNTJzpcbiAgICAgICAgcmV0dXJuICdUQVNLX0lOX1BST0dSRVNTJztcbiAgICAgIGNhc2UgJ0ZBSUxFRCc6XG4gICAgICAgIHJldHVybiAnRkFJTEVEJztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiAnTk9UX1NUQVJURUQnO1xuICAgIH1cbiAgfTtcblxuXG4gIGNvbnN0IGdldEJ1dHRvblN0YXRlID0gdXNlQ2FsbGJhY2soKCk6IEJ1dHRvblN0YXRlID0+IHtcbiAgaWYgKCFjb3Vyc2VEYXRhPy5jb3Vyc2U/LmNoYXB0ZXJzPy5sZW5ndGgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbWFpblRleHQ6ICfjgZPjga7jgrPjg7zjgrnjgpLlrabnv5LjgZnjgosnLFxuICAgICAgc2hvd0J1dHRvbjogdHJ1ZSxcbiAgICAgIGlzV2FpdGluZ0ZvclJlbGVhc2U6IGZhbHNlXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IGN1cnJlbnRDaGFwdGVyID0gY291cnNlRGF0YS5jb3Vyc2UuY2hhcHRlcnNbMF07XG4gIGNvbnN0IGNoYXB0ZXJTdGF0dXMgPSBkZXRlcm1pbmVDaGFwdGVyUHJvZ3Jlc3MoY3VycmVudENoYXB0ZXIpO1xuXG4gIC8vIOino+aUvuW+heOBoeeKtuaFi+OBruODgeOCp+ODg+OCr1xuICBpZiAoY3VycmVudENoYXB0ZXIubmV4dFVubG9ja1RpbWUgJiYgbmV3IERhdGUoKSA8IG5ldyBEYXRlKGN1cnJlbnRDaGFwdGVyLm5leHRVbmxvY2tUaW1lKSkge1xuICAgIHJldHVybiB7XG4gICAgICBtYWluVGV4dDogJ+OBk+OBruODgeODo+ODl+OCv+ODvOOCkuWtpue/kuOBmeOCiycsXG4gICAgICBzaG93QnV0dG9uOiBmYWxzZSxcbiAgICAgIGlzV2FpdGluZ0ZvclJlbGVhc2U6IHRydWUsXG4gICAgICByZWxlYXNlVGltZU1lc3NhZ2U6IGZvcm1hdFJlbGVhc2VUaW1lKGN1cnJlbnRDaGFwdGVyLm5leHRVbmxvY2tUaW1lKSxcbiAgICAgIG5leHRDaGFwdGVyOiB7XG4gICAgICAgIGlkOiBjdXJyZW50Q2hhcHRlci5pZCxcbiAgICAgICAgdGl0bGU6IGN1cnJlbnRDaGFwdGVyLnRpdGxlLFxuICAgICAgICBvcmRlckluZGV4OiBjdXJyZW50Q2hhcHRlci5vcmRlckluZGV4XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIC8vIOmAmuW4uOeKtuaFi1xuICBsZXQgbWFpblRleHQgPSAn44GT44Gu44OB44Oj44OX44K/44O844KS5a2m57+S44GZ44KLJztcbiAgaWYgKGNoYXB0ZXJTdGF0dXMgPT09ICdDT01QTEVURUQnKSB7XG4gICAgbWFpblRleHQgPSAn44GT44Gu44OB44Oj44OX44K/44O844KS5b6p57+S44GZ44KLJztcbiAgfSBlbHNlIGlmIChjaGFwdGVyU3RhdHVzID09PSAnTEVTU09OX0lOX1BST0dSRVNTJyB8fCBjaGFwdGVyU3RhdHVzID09PSAnVEFTS19JTl9QUk9HUkVTUycpIHtcbiAgICBtYWluVGV4dCA9ICfjgZPjga7jg4Hjg6Pjg5fjgr/jg7zjgpLlrabnv5LjgZnjgosnO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBtYWluVGV4dCxcbiAgICBzaG93QnV0dG9uOiB0cnVlLFxuICAgIGlzV2FpdGluZ0ZvclJlbGVhc2U6IGZhbHNlLFxuICAgIG5leHRDaGFwdGVyOiBjdXJyZW50Q2hhcHRlciA/IHtcbiAgICAgIGlkOiBjdXJyZW50Q2hhcHRlci5pZCxcbiAgICAgIHRpdGxlOiBjdXJyZW50Q2hhcHRlci50aXRsZSxcbiAgICAgIG9yZGVySW5kZXg6IGN1cnJlbnRDaGFwdGVyLm9yZGVySW5kZXhcbiAgICB9IDogdW5kZWZpbmVkXG4gIH07XG59LCBbY291cnNlRGF0YSwgZGV0ZXJtaW5lQ2hhcHRlclByb2dyZXNzXSk7XG4gIGNvbnN0IHVwZGF0ZU5hdmlnYXRpb25TdGF0ZSA9IHVzZUNhbGxiYWNrKGFzeW5jIChjdXJyZW50Q2hhcHRlcjogQ291cnNlRGF0YVsnY291cnNlJ11bJ2NoYXB0ZXJzJ11bMF0pID0+IHtcbiAgICBpZiAoIWNvdXJzZURhdGE/LmNvdXJzZT8uY2hhcHRlcnMpIHJldHVybjtcbiAgXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjb3Vyc2VBcGkuZ2V0Q2hhcHRlcnNQcm9ncmVzcyhjb3Vyc2VEYXRhLmNvdXJzZUlkKTtcbiAgICBpZiAoIXJlc3BvbnNlLnN1Y2Nlc3MgfHwgIXJlc3BvbnNlLmRhdGEpIHJldHVybjtcbiAgXG4gICAgY29uc3QgY2hhcHRlcnMgPSByZXNwb25zZS5kYXRhO1xuICAgIGNvbnN0IGN1cnJlbnRJbmRleCA9IGNoYXB0ZXJzLmZpbmRJbmRleChjaCA9PiBjaC5pZCA9PT0gY3VycmVudENoYXB0ZXIuaWQpO1xuICAgIFxuICAgIGNvbnN0IHByZXZDaGFwdGVyID0gY3VycmVudEluZGV4ID4gMCA/IGNoYXB0ZXJzW2N1cnJlbnRJbmRleCAtIDFdIDogbnVsbDtcbiAgICBjb25zdCBuZXh0Q2hhcHRlciA9IGN1cnJlbnRJbmRleCA8IGNoYXB0ZXJzLmxlbmd0aCAtIDEgPyBjaGFwdGVyc1tjdXJyZW50SW5kZXggKyAxXSA6IG51bGw7XG4gIFxuICAgIGNvbnN0IGNhbk5hdmlnYXRlUHJldiA9ICEhcHJldkNoYXB0ZXI7XG4gICAgY29uc3QgY2FuTmF2aWdhdGVOZXh0ID0gISFuZXh0Q2hhcHRlciAmJiBjdXJyZW50Q2hhcHRlci5zdGF0dXMgPT09ICdDT01QTEVURUQnO1xuICBcbiAgICBzZXROYXZpZ2F0aW9uU3RhdGUoe1xuICAgICAgcHJldkNoYXB0ZXI6IHByZXZDaGFwdGVyID8ge1xuICAgICAgICAuLi5wcmV2Q2hhcHRlciwgLy8gQ2hhcHRlclByZXZpZXdEYXRh44Gu5YWo44OX44Ot44OR44OG44Kj44KS5bGV6ZaLXG4gICAgICAgIHN0YXR1czogcHJldkNoYXB0ZXIuc3RhdHVzLFxuICAgICAgICBpc0xvY2tlZDogcHJldkNoYXB0ZXIuaXNMb2NrZWQsXG4gICAgICAgIGNhbkFjY2VzczogcHJldkNoYXB0ZXIuY2FuQWNjZXNzXG4gICAgICB9IDogbnVsbCxcbiAgICAgIG5leHRDaGFwdGVyOiBuZXh0Q2hhcHRlciA/IHtcbiAgICAgICAgLi4ubmV4dENoYXB0ZXIsIC8vIENoYXB0ZXJQcmV2aWV3RGF0YeOBruWFqOODl+ODreODkeODhuOCo+OCkuWxlemWi1xuICAgICAgICBzdGF0dXM6IG5leHRDaGFwdGVyLnN0YXR1cyxcbiAgICAgICAgaXNMb2NrZWQ6IG5leHRDaGFwdGVyLmlzTG9ja2VkLFxuICAgICAgICBjYW5BY2Nlc3M6IG5leHRDaGFwdGVyLmNhbkFjY2Vzc1xuICAgICAgfSA6IG51bGwsXG4gICAgICBjYW5OYXZpZ2F0ZVByZXYsXG4gICAgICBjYW5OYXZpZ2F0ZU5leHRcbiAgICB9KTtcbiAgfSwgW2NvdXJzZURhdGFdKTtcbiAgY29uc3Qgc3dpdGNoVG9DaGFwdGVyID0gYXN5bmMgKG5ld0NoYXB0ZXI6IENoYXB0ZXJQcmV2aWV3RGF0YSkgPT4ge1xuICAgIGlmICghY291cnNlRGF0YSkgcmV0dXJuO1xuICBcbiAgICAvLyDjgqLjgq/jgrvjgrnliLblvqHjga7jg4Hjgqfjg4Pjgq9cblxuICAgIHRyeSB7XG4gICAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjb3Vyc2VBcGkuZ2V0Q2hhcHRlcnNQcm9ncmVzcyhjb3Vyc2VEYXRhLmNvdXJzZUlkKTtcbiAgICAgIFxuICAgICAgaWYgKCFyZXNwb25zZS5zdWNjZXNzIHx8ICFyZXNwb25zZS5kYXRhKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcign44OB44Oj44OX44K/44O85oOF5aCx44Gu5Y+W5b6X44Gr5aSx5pWX44GX44G+44GX44GfJyk7XG4gICAgICB9XG4gIFxuICAgICAgLy8g5pyA5paw44Gu44OB44Oj44OX44K/44O85oOF5aCx44KS5Y+W5b6XXG4gICAgICBjb25zdCBsYXRlc3RDaGFwdGVySW5mbyA9IHJlc3BvbnNlLmRhdGEuZmluZChjaCA9PiBjaC5pZCA9PT0gbmV3Q2hhcHRlci5pZCk7XG4gICAgICBpZiAoIWxhdGVzdENoYXB0ZXJJbmZvKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcign44OB44Oj44OX44K/44O85oOF5aCx44GM6KaL44Gk44GL44KK44G+44Gb44KTJyk7XG4gICAgICB9XG4gIFxuICAgICAgLy8g5YmN44Gu44OB44Oj44OX44K/44O844GM5a6M5LqG44GX44Gm44GE44Gq44GE5aC05ZCI44Gv44Ki44Kv44K744K55LiN5Y+vXG4gICAgICBjb25zdCBwcmV2Q2hhcHRlciA9IHJlc3BvbnNlLmRhdGEuZmluZChjaCA9PiBjaC5vcmRlckluZGV4ID09PSBsYXRlc3RDaGFwdGVySW5mby5vcmRlckluZGV4IC0gMSk7XG4gICAgICBpZiAocHJldkNoYXB0ZXIgJiYgcHJldkNoYXB0ZXIuc3RhdHVzICE9PSAnQ09NUExFVEVEJyAmJiAhbGF0ZXN0Q2hhcHRlckluZm8uY2FuQWNjZXNzKSB7XG4gICAgICAgIHRvYXN0LmVycm9yKCfliY3jga7jg4Hjg6Pjg5fjgr/jg7zjgpLlrozkuobjgZXjgZvjgabjgY/jgaDjgZXjgYQnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICBcbiAgICAgIGNvbnN0IHVwZGF0ZWRDaGFwdGVyID0ge1xuICAgICAgICAuLi5sYXRlc3RDaGFwdGVySW5mbyxcbiAgICAgICAgY291cnNlSWQ6IGNvdXJzZURhdGEuY291cnNlSWRcbiAgICAgIH07XG4gIFxuICAgICAgY29uc3QgdXBkYXRlZENvdXJzZURhdGE6IENvdXJzZURhdGEgPSB7XG4gICAgICAgIC4uLmNvdXJzZURhdGEsXG4gICAgICAgIGNvdXJzZToge1xuICAgICAgICAgIC4uLmNvdXJzZURhdGEuY291cnNlLFxuICAgICAgICAgIGNoYXB0ZXJzOiBbdXBkYXRlZENoYXB0ZXJdXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBcbiAgICAgIHNldENvdXJzZURhdGEodXBkYXRlZENvdXJzZURhdGEpO1xuICAgICAgYXdhaXQgdXBkYXRlTmF2aWdhdGlvblN0YXRlKHVwZGF0ZWRDb3Vyc2VEYXRhLmNvdXJzZS5jaGFwdGVyc1swXSk7XG4gIFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB0b2FzdC5lcnJvcign44OB44Oj44OX44K/44O844Gu5YiH44KK5pu/44GI44Gr5aSx5pWX44GX44G+44GX44GfJyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICAvLyDjgr/jgqTjg6DjgqLjgqbjg4jjgpLjg4Hjgqfjg4Pjgq/jgZnjgovplqLmlbBcbiAgY29uc3QgY2hlY2tUaW1lUmVtYWluaW5nID0gKHRpbWVSZW1haW5pbmc/OiB7IFxuICAgIGRheXM6IG51bWJlcjtcbiAgICBob3VyczogbnVtYmVyO1xuICAgIG1pbnV0ZXM6IG51bWJlcjtcbiAgICB0aW1lT3V0QXQ6IHN0cmluZztcbiAgfSkgPT4ge1xuICAgIGlmICghdGltZVJlbWFpbmluZykgcmV0dXJuIGZhbHNlO1xuICAgIFxuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgY29uc3QgdGltZU91dEF0ID0gbmV3IERhdGUodGltZVJlbWFpbmluZy50aW1lT3V0QXQpO1xuICAgIHJldHVybiBub3cgPj0gdGltZU91dEF0O1xuICB9O1xuXG4gIGNvbnN0IHBhcnNlQ2hhcHRlckNvbnRlbnQgPSAoY2hhcHRlcjogQ2hhcHRlcik6IENoYXB0ZXJDb250ZW50IHwgbnVsbCA9PiB7XG4gICAgaWYgKCFjaGFwdGVyIHx8ICFjaGFwdGVyLmNvbnRlbnQpIHJldHVybiBudWxsO1xuICBcbiAgICAvLyBDaGFwdGVyQ29udGVudOWei+OBq+WOs+WvhuOBq+WQiOOCj+OBm+OBn+i/lOOCiuWApFxuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBjaGFwdGVyLmNvbnRlbnQudHlwZSxcbiAgICAgIHZpZGVvSWQ6IGNoYXB0ZXIuY29udGVudC52aWRlb0lkLFxuICAgICAgdHJhbnNjcmlwdGlvbjogY2hhcHRlci5jb250ZW50LnRyYW5zY3JpcHRpb24sXG4gICAgICB0aHVtYm5haWxVcmw6IGNoYXB0ZXIuY29udGVudC50aHVtYm5haWxVcmwsXG4gICAgICBzdWJtaXNzaW9uOiBjaGFwdGVyLnN1Ym1pc3Npb24sICAvLyBzdWJtaXNzaW9u5oOF5aCx44KS6L+95YqgXG4gICAgICBsZXNzb25XYXRjaFJhdGU6IGNoYXB0ZXIubGVzc29uV2F0Y2hSYXRlXG4gICAgfTtcbiAgfTtcblxuICBjb25zdCBsb2FkQ3VycmVudENvdXJzZSA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY291cnNlQXBpLmdldEN1cnJlbnRVc2VyQ291cnNlKCk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uuc3VjY2VzcyB8fCAhcmVzcG9uc2UuZGF0YSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+OCs+ODvOOCueODh+ODvOOCv+OBruWPluW+l+OBq+WkseaVl+OBl+OBvuOBl+OBnycpO1xuICAgICAgfVxuXG4gICAgICBcbiAgICAvLyDjgrPjg7zjgrnjg4fjg7zjgr/jga7jg5Xjgqnjg7zjg57jg4Pjg4hcbiAgICBjb25zdCBmb3JtYXR0ZWREYXRhOiBDb3Vyc2VEYXRhID0ge1xuICAgICAgaWQ6IHJlc3BvbnNlLmRhdGEuaWQsXG4gICAgICB1c2VySWQ6IHJlc3BvbnNlLmRhdGEudXNlcklkIHx8ICcnLFxuICAgICAgY291cnNlSWQ6IHJlc3BvbnNlLmRhdGEuaWQsXG4gICAgICBpc0FjdGl2ZTogcmVzcG9uc2UuZGF0YS5zdGF0dXMgPT09ICdhY3RpdmUnLFxuICAgICAgc3RhdHVzOiByZXNwb25zZS5kYXRhLnN0YXR1cyxcbiAgICAgIHN0YXJ0ZWRBdDogcmVzcG9uc2UuZGF0YS50aW1lSW5mby5zdGFydGVkQXQsXG4gICAgICBjb21wbGV0ZWRBdDogcmVzcG9uc2UuZGF0YS50aW1lSW5mby5jb21wbGV0ZWRBdCB8fCBudWxsLFxuICAgICAgcHJvZ3Jlc3M6IHJlc3BvbnNlLmRhdGEucHJvZ3Jlc3MgfHwgMCxcbiAgICAgIGNvdXJzZToge1xuICAgICAgICBpZDogcmVzcG9uc2UuZGF0YS5pZCxcbiAgICAgICAgdGl0bGU6IHJlc3BvbnNlLmRhdGEudGl0bGUsXG4gICAgICAgIGRlc2NyaXB0aW9uOiByZXNwb25zZS5kYXRhLmRlc2NyaXB0aW9uLFxuICAgICAgICBsZXZlbDogcmVzcG9uc2UuZGF0YS5sZXZlbFJlcXVpcmVkLFxuICAgICAgICByYW5rUmVxdWlyZWQ6IHJlc3BvbnNlLmRhdGEucmFua1JlcXVpcmVkLFxuICAgICAgICBsZXZlbFJlcXVpcmVkOiByZXNwb25zZS5kYXRhLmxldmVsUmVxdWlyZWQsXG4gICAgICAgIHRpbWVMaW1pdDogcmVzcG9uc2UuZGF0YS50aW1lTGltaXQsXG4gICAgICAgIHRpbWVSZW1haW5pbmc6IHJlc3BvbnNlLmRhdGEudGltZVJlbWFpbmluZyxcbiAgICAgICAgY2hhcHRlcnM6IHJlc3BvbnNlLmRhdGEuY2hhcHRlcnMgfHwgW11cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8g54++5Zyo44Gu44OB44Oj44OX44K/44O844KS5Y+W5b6XXG4gICAgY29uc29sZS5sb2coJ+OAkFN0ZXAgM+OAkWdldEN1cnJlbnRDaGFwdGVy5ZG844Gz5Ye644GX6ZaL5aeLJywge1xuICAgICAgY291cnNlSWQ6IGZvcm1hdHRlZERhdGEuY291cnNlSWRcbiAgICB9KTtcblxuXG5cbiAgICBjb25zdCBjaGFwdGVyUmVzcG9uc2UgPSBhd2FpdCBjb3Vyc2VBcGkuZ2V0Q3VycmVudENoYXB0ZXIoZm9ybWF0dGVkRGF0YS5jb3Vyc2VJZCk7XG4gICAgICBcbiAgIC8vIGxvYWRDdXJyZW50Q291cnNlIOmWouaVsOWGheOBruipsuW9k+mDqOWIhuOCkuS/ruato1xuaWYgKGNoYXB0ZXJSZXNwb25zZS5zdWNjZXNzICYmIGNoYXB0ZXJSZXNwb25zZS5kYXRhKSB7XG4gIGNvbnN0IGN1cnJlbnRDaGFwdGVyID0gY2hhcHRlclJlc3BvbnNlLmRhdGE/LmNoYXB0ZXJJZCBcbiAgICA/IGZvcm1hdHRlZERhdGEuY291cnNlLmNoYXB0ZXJzLmZpbmQoXG4gICAgICAgIGNoYXB0ZXIgPT4gY2hhcHRlci5pZCA9PT0gY2hhcHRlclJlc3BvbnNlLmRhdGE/LmNoYXB0ZXJJZFxuICAgICAgKVxuICAgIDogbnVsbDtcblxuICBpZiAoY3VycmVudENoYXB0ZXIpIHtcbiAgICAvLyBjaGFwdGVyUmVzcG9uc2UuZGF0YeOBruaDheWgseOCkuePvuWcqOOBruODgeODo+ODl+OCv+ODvOOBq+ODnuODvOOCuFxuICAgIGNvbnN0IG1lcmdlZENoYXB0ZXIgPSB7XG4gICAgICAuLi5jdXJyZW50Q2hhcHRlcixcbiAgICAgIHN0YXJ0ZWRBdDogY2hhcHRlclJlc3BvbnNlLmRhdGEuc3RhcnRlZEF0IFxuICAgICAgICA/IG5ldyBEYXRlKGNoYXB0ZXJSZXNwb25zZS5kYXRhLnN0YXJ0ZWRBdCkudG9JU09TdHJpbmcoKSBcbiAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICBzdGF0dXM6IGNoYXB0ZXJSZXNwb25zZS5kYXRhLnN0YXR1cyxcbiAgICAgIGlzVGltZWRPdXQ6IGNoYXB0ZXJSZXNwb25zZS5kYXRhLmlzVGltZWRPdXQsXG4gICAgICBsZXNzb25XYXRjaFJhdGU6IGNoYXB0ZXJSZXNwb25zZS5kYXRhLmxlc3NvbldhdGNoUmF0ZSxcbiAgICAgIHNjb3JlOiBjaGFwdGVyUmVzcG9uc2UuZGF0YS5zY29yZSxcbiAgICAgIC8vIENvdXJzZURhdGFbJ2NvdXJzZSddWydjaGFwdGVycyddWzBd44Gu5Z6L44Gr5ZCI44KP44Gb44Gm5b+F6aCI44OX44Ot44OR44OG44Kj44KS6L+95YqgXG4gICAgICBjb3Vyc2VJZDogZm9ybWF0dGVkRGF0YS5jb3Vyc2VJZCxcbiAgICAgIHRpdGxlOiBjdXJyZW50Q2hhcHRlci50aXRsZSxcbiAgICAgIHN1YnRpdGxlOiBjdXJyZW50Q2hhcHRlci5zdWJ0aXRsZSxcbiAgICAgIG9yZGVySW5kZXg6IGN1cnJlbnRDaGFwdGVyLm9yZGVySW5kZXgsXG4gICAgICB0aW1lTGltaXQ6IGN1cnJlbnRDaGFwdGVyLnRpbWVMaW1pdCxcbiAgICAgIGlzVmlzaWJsZTogY3VycmVudENoYXB0ZXIuaXNWaXNpYmxlLFxuICAgICAgY29udGVudDogY3VycmVudENoYXB0ZXIuY29udGVudCxcbiAgICAgIGlzTG9ja2VkOiBmYWxzZSxcbiAgICAgIGNhbkFjY2VzczogdHJ1ZVxuICAgIH07XG5cbiAgICAvLyDjg57jg7zjgrjjgZfjgZ/jg4Hjg6Pjg5fjgr/jg7zjgafmm7TmlrBcbiAgICBmb3JtYXR0ZWREYXRhLmNvdXJzZS5jaGFwdGVycyA9IFttZXJnZWRDaGFwdGVyXTtcbiAgICBhd2FpdCB1cGRhdGVOYXZpZ2F0aW9uU3RhdGUobWVyZ2VkQ2hhcHRlcik7XG4gIH1cbn1cbiAgICBzZXRDb3Vyc2VEYXRhKGZvcm1hdHRlZERhdGEpO1xuXG4gICAgaWYgKGNoZWNrVGltZVJlbWFpbmluZyhmb3JtYXR0ZWREYXRhLmNvdXJzZS50aW1lUmVtYWluaW5nKSkge1xuICAgICAgc2V0VGltZW91dChsb2FkQ3VycmVudENvdXJzZSwgMTAwMCk7XG4gICAgfVxuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignbG9hZEN1cnJlbnRDb3Vyc2XlpLHmlZc6JywgZXJyb3IpO1xuICAgIHRvYXN0LmVycm9yKCfjgrPjg7zjgrnmg4XloLHjga7lj5blvpfjgavlpLHmlZfjgZfjgb7jgZfjgZ8nKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgfVxufTtcblxuY29uc3QgaGFuZGxlQ29udGludWVMZWFybmluZyA9IGFzeW5jICh0YXJnZXRDaGFwdGVySWQ/OiBzdHJpbmcpID0+IHtcbiAgaWYgKCFjb3Vyc2VEYXRhKSByZXR1cm47XG4gIFxuICB0cnkge1xuICAgIC8vIOOCv+OCpOODoOOCouOCpuODiOODgeOCp+ODg+OCr1xuICAgIGlmIChjaGVja1RpbWVSZW1haW5pbmcoY291cnNlRGF0YS5jb3Vyc2UudGltZVJlbWFpbmluZykpIHtcbiAgICAgIGF3YWl0IGxvYWRDdXJyZW50Q291cnNlKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8g54++5Zyo6KGo56S65Lit44Gu44OB44Oj44OX44K/44O844GuSUTjgpLkvb/nlKhcbiAgICBjb25zdCBjdXJyZW50Q2hhcHRlciA9IGNvdXJzZURhdGEuY291cnNlLmNoYXB0ZXJzWzBdO1xuICAgIGNvbnN0IGNoYXB0ZXJJZCA9IGN1cnJlbnRDaGFwdGVyPy5pZDtcblxuICAgIGlmICghY2hhcHRlcklkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NoYXB0ZXIgSUQgbm90IGZvdW5kJyk7XG4gICAgfVxuXG4gICAgYXdhaXQgbG9hZEN1cnJlbnRDb3Vyc2UoKTtcbiAgICByb3V0ZXIucHVzaChgL3VzZXIvY291cnNlcy8ke2NvdXJzZURhdGEuY291cnNlSWR9L2NoYXB0ZXJzLyR7Y2hhcHRlcklkfWApO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIGhhbmRsZUNvbnRpbnVlTGVhcm5pbmc6JywgZXJyb3IpO1xuICAgIHRvYXN0LmVycm9yKCfjg4Hjg6Pjg5fjgr/jg7zjgbjjga7np7vli5XjgavlpLHmlZfjgZfjgb7jgZfjgZ8nKTtcbiAgfVxufTtcblxudXNlRWZmZWN0KCgpID0+IHtcbiAgbG9hZEN1cnJlbnRDb3Vyc2UoKTtcbn0sIFtdKTtcblxudXNlRWZmZWN0KCgpID0+IHtcbiAgaWYgKGNvdXJzZURhdGE/LmNvdXJzZT8uY2hhcHRlcnM/LlswXSkge1xuICAgIHVwZGF0ZU5hdmlnYXRpb25TdGF0ZShjb3Vyc2VEYXRhLmNvdXJzZS5jaGFwdGVyc1swXSk7XG4gIH1cbn0sIFtjb3Vyc2VEYXRhPy5jb3Vyc2U/LmNoYXB0ZXJzLCB1cGRhdGVOYXZpZ2F0aW9uU3RhdGVdKTtcbiByZXR1cm4ge1xuICAgIGNvdXJzZURhdGEsXG4gICAgbG9hZGluZyxcbiAgICBidXR0b25TdGF0ZTogZ2V0QnV0dG9uU3RhdGUoKSxcbiAgICBuYXZpZ2F0aW9uU3RhdGUsXG4gICAgZGV0ZXJtaW5lQ2hhcHRlclByb2dyZXNzLFxuICAgIGhhbmRsZUNvbnRpbnVlTGVhcm5pbmcsXG4gICAgcGFyc2VDaGFwdGVyQ29udGVudCxcbiAgICByZWZyZXNoQ291cnNlOiBsb2FkQ3VycmVudENvdXJzZSxcbiAgICBzd2l0Y2hUb0NoYXB0ZXIsXG4gICAgZ2V0Q2hhcHRlckRpc3BsYXlTdGF0ZVxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQ3VycmVudENvdXJzZTsiXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VDYWxsYmFjayIsImNvdXJzZUFwaSIsImZvcm1hdFRpbWUiLCJ1c2VSb3V0ZXIiLCJ0b2FzdCIsImlzUmVsZWFzZVRpbWVWYWxpZCIsInJlbGVhc2VUaW1lIiwiY291cnNlU3RhcnREYXRlIiwic3RhcnREYXRlIiwiRGF0ZSIsInJlbGVhc2VEYXRlIiwiZ2V0VGltZSIsImZvcm1hdFJlbGVhc2VUaW1lIiwiZGF0ZSIsIm5vdyIsImRpZmZIb3VycyIsIk1hdGgiLCJjZWlsIiwiZm9ybWF0VGltZVJlbWFpbmluZyIsInRpbWVPdXRBdCIsImVuZFRpbWUiLCJyZW1haW5pbmdNcyIsImZsb29yIiwiZ2V0Q2hhcHRlckRpc3BsYXlTdGF0ZSIsImNoYXB0ZXIiLCJjb3Vyc2VTdGF0dXMiLCJwcmV2aW91c0NoYXB0ZXIiLCJpbmNsdWRlcyIsImNhblNob3dQcmV2aWV3IiwibWVzc2FnZSIsInNob3dUaW1lciIsInN0YXR1cyIsIm5leHRVbmxvY2tUaW1lIiwidXNlQ3VycmVudENvdXJzZSIsImNvdXJzZURhdGEiLCJzZXRDb3Vyc2VEYXRhIiwibG9hZGluZyIsInNldExvYWRpbmciLCJuYXZpZ2F0aW9uU3RhdGUiLCJzZXROYXZpZ2F0aW9uU3RhdGUiLCJwcmV2Q2hhcHRlciIsIm5leHRDaGFwdGVyIiwiY2FuTmF2aWdhdGVQcmV2IiwiY2FuTmF2aWdhdGVOZXh0Iiwicm91dGVyIiwiZGV0ZXJtaW5lQ2hhcHRlclByb2dyZXNzIiwiZ2V0QnV0dG9uU3RhdGUiLCJjb3Vyc2UiLCJjaGFwdGVycyIsImxlbmd0aCIsIm1haW5UZXh0Iiwic2hvd0J1dHRvbiIsImlzV2FpdGluZ0ZvclJlbGVhc2UiLCJjdXJyZW50Q2hhcHRlciIsImNoYXB0ZXJTdGF0dXMiLCJyZWxlYXNlVGltZU1lc3NhZ2UiLCJpZCIsInRpdGxlIiwib3JkZXJJbmRleCIsInVuZGVmaW5lZCIsInVwZGF0ZU5hdmlnYXRpb25TdGF0ZSIsInJlc3BvbnNlIiwiZ2V0Q2hhcHRlcnNQcm9ncmVzcyIsImNvdXJzZUlkIiwic3VjY2VzcyIsImRhdGEiLCJjdXJyZW50SW5kZXgiLCJmaW5kSW5kZXgiLCJjaCIsImlzTG9ja2VkIiwiY2FuQWNjZXNzIiwic3dpdGNoVG9DaGFwdGVyIiwibmV3Q2hhcHRlciIsIkVycm9yIiwibGF0ZXN0Q2hhcHRlckluZm8iLCJmaW5kIiwiZXJyb3IiLCJ1cGRhdGVkQ2hhcHRlciIsInVwZGF0ZWRDb3Vyc2VEYXRhIiwiY2hlY2tUaW1lUmVtYWluaW5nIiwidGltZVJlbWFpbmluZyIsInBhcnNlQ2hhcHRlckNvbnRlbnQiLCJjb250ZW50IiwidHlwZSIsInZpZGVvSWQiLCJ0cmFuc2NyaXB0aW9uIiwidGh1bWJuYWlsVXJsIiwic3VibWlzc2lvbiIsImxlc3NvbldhdGNoUmF0ZSIsImxvYWRDdXJyZW50Q291cnNlIiwiZ2V0Q3VycmVudFVzZXJDb3Vyc2UiLCJmb3JtYXR0ZWREYXRhIiwidXNlcklkIiwiaXNBY3RpdmUiLCJzdGFydGVkQXQiLCJ0aW1lSW5mbyIsImNvbXBsZXRlZEF0IiwicHJvZ3Jlc3MiLCJkZXNjcmlwdGlvbiIsImxldmVsIiwibGV2ZWxSZXF1aXJlZCIsInJhbmtSZXF1aXJlZCIsInRpbWVMaW1pdCIsImNvbnNvbGUiLCJsb2ciLCJjaGFwdGVyUmVzcG9uc2UiLCJnZXRDdXJyZW50Q2hhcHRlciIsImNoYXB0ZXJJZCIsIm1lcmdlZENoYXB0ZXIiLCJ0b0lTT1N0cmluZyIsImlzVGltZWRPdXQiLCJzY29yZSIsInN1YnRpdGxlIiwiaXNWaXNpYmxlIiwic2V0VGltZW91dCIsImhhbmRsZUNvbnRpbnVlTGVhcm5pbmciLCJ0YXJnZXRDaGFwdGVySWQiLCJwdXNoIiwiYnV0dG9uU3RhdGUiLCJyZWZyZXNoQ291cnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/user/home/components/hooks/useCurrentCourse.tsx\n"));

/***/ })

});